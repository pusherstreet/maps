
<div class="row" style="height:100%; width:100%">

    <style>
       
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }
        #configuration-panel{
            padding: 30px 10px;
        }
        #run{
            float:right;
        }
    </style>
    <div id="configuration-panel">
        <label>Radius</label>
        <input type="number" id="radius" />
        <label>Direction</label>
        <input type="number" id="direction" />
        <label>Angle</label>
        <select id="angle">
            <option value="30">30</option>
            <option value="45">45</option>
            <option value="90">90</option>
            <option value="180">180</option>
        </select>
        <button class="btn btn-info" id="run">Run</button>
    </div>
    <div id="map_canvas"  style="width: 100%; height: 100%;"></div>
    <script src="https://maps.googleapis.com/maps/api/js?key=@Model"></script>
    <script src="~/Scripts/v3_epoly.js"></script>
    <script src="~/Scripts/engine.js"></script>
    <script>
        var map = null;
        var bounds = null;
        var drawObjects = [];

        function clearAll() {
            drawObjects.forEach(function (o) {
                o.setMap(null);
            })
        }

        function drawSector(angle) {
            clearAll();
            var startPoint = new google.maps.LatLng(50.123212, 26.9252192);
            var centerPoint = new google.maps.LatLng(49.4105308, 26.9252192);
            angle = angle.toRad();

            var x0 = centerPoint.lat();
            var y0 = centerPoint.lng();
            var x1 = startPoint.lat();
            var y1 = startPoint.lng();
            var sin = Math.sin;
            var cos = Math.cos;
            console.log((x1 - x0) * cos(angle));
            var x = x0 + ((x1 - x0) * cos(angle) - (y1 - y0) * sin(angle));
       
            var y = y0 + (x1 - x0) * sin(angle) + (y1 - y0) * cos(angle);

            var endPoint = new google.maps.LatLng(x, y);

            createMarker(centerPoint, "center: " + centerPoint.toUrlValue(6));

            var arcPts = drawArc(centerPoint, centerPoint.Bearing(startPoint), centerPoint.Bearing(endPoint), centerPoint.distanceFrom(startPoint));
            // add the start and end lines
            arcPts.push(centerPoint);
            bounds.extend(centerPoint);
            arcPts.push(startPoint);

            var piePoly = new google.maps.Polygon({
                paths: [arcPts],
                strokeColor: "#00FF00",
                strokeOpacity: 0.5,
                strokeWeight: 2,
                fillColor: "#FF0000",
                fillOpacity: 0.35,
                map: map
            });
            drawObjects.push(piePoly);
            map.fitBounds(bounds);
        }
      
        function initialize() {
            var myOptions = {
                zoom: 10,
                center: new google.maps.LatLng(-33.9, 151.2),
                mapTypeControl: true,
                mapTypeControlOptions: { style: google.maps.MapTypeControlStyle.DROPDOWN_MENU },
                navigationControl: true,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            }
            map = new google.maps.Map(document.getElementById("map_canvas"),
                                          myOptions);

            bounds = new google.maps.LatLngBounds();

            google.maps.event.addListener(map, 'click', function () {
                infowindow.close();
            });

            document.getElementById('angle').onchange = function () {
                drawSector(parseInt(this.value));
            }

            drawSector(30);
            //49.4105308,26.9252192
            //var startPoint = new google.maps.LatLng(50, 26.9252192);
            //var endPoint = new google.maps.LatLng(49, 26.9252192);
            //var centerPoint = new google.maps.LatLng(49.4105308, 26.9252192);

            //createMarker(centerPoint, "center: " + centerPoint.toUrlValue(6));

            //var arcPts = drawArc(centerPoint, centerPoint.Bearing(startPoint), centerPoint.Bearing(endPoint), centerPoint.distanceFrom(startPoint));
            //// add the start and end lines
            //arcPts.push(centerPoint);
            //bounds.extend(centerPoint);
            //arcPts.push(startPoint);

            //var piePoly = new google.maps.Polygon({
            //    paths: [arcPts],
            //    strokeColor: "#00FF00",
            //    strokeOpacity: 0.5,
            //    strokeWeight: 2,
            //    fillColor: "#FF0000",
            //    fillOpacity: 0.35,
            //    map: map
            //});
            
            //map.fitBounds(bounds);

        }
        initialize();

    </script>
</div>